#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий
	
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если Не ((Дата >= Договор.ВКМ_ДатаНачалаДействияДоговора И Дата <= Договор.ВКМ_ДатаОкончанияДействияДоговора) И
		Договор.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание) Тогда
		
		Отказ = Истина;
	КонецЕсли;		

	ИтогоКоличествоЧасовКОплате = ВыполненныеРаботы.Итог("ЧасыКОплатеКлиенту");
	СтоимостьЧаса = Договор.ВКМ_СтоимостьЧасаРаботы;

	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина; 
	
	Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
	Движение.Период = Дата;
	Движение.Клиент = Клиент;
	Движение.Договор = Договор;
	Движение.КоличествоЧасов = ИтогоКоличествоЧасовКОплате;
	Движение.СуммаКОплате = ИтогоКоличествоЧасовКОплате * СтоимостьЧаса;
	
	Движения.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудниковСрезПоследних.ПроцентОтРабот, 0) КАК ПроцентОтРабот
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|ГДЕ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.Сотрудник = &Сотрудник";
	
	Запрос.УстановитьПараметр("Сотрудник", Специалист);
	
	Выборка = Запрос.Выполнить().Выбрать();

	Если Не Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;
	
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
	
	Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
	Движение.Период = Дата;
	Движение.Сотрудник = Специалист;
	Движение.ЧасовКОплате = ИтогоКоличествоЧасовКОплате;
	Движение.СуммаКОплате = ИтогоКоличествоЧасовКОплате * СтоимостьЧаса * (Выборка.ПроцентОтРабот / 100);

	Движения.Записать();	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения) 
	
	Если ОбменДанными.Загрузка Тогда
	     Возврат;
	КонецЕсли;

	Если ЭтоНовый() Тогда
		
		ТекстУведомления = СтрШаблон("Создан новый документ обслуживания клиента: 
			|Дата проведния работ %1
			|Время начала работ %2
			|Время окончания работ %3
			|Специалист: %4", Формат(ДатаПроведенияРабот, "ДФ=dd.MM.yyyy;"), Формат(ВремяНачалаРабот, "ДЛФ=T;"), Формат(ВремяОкончанияРабот, "ДЛФ=T;"), Специалист); 
		
		ВКМ_Телеграм.СоздатьУведомление(ТекстУведомления);
		
	Иначе
		Запрос = Новый Запрос; 
		Запрос.Текст = "ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот,
		|	ВКМ_ОбслуживаниеКлиента.ВремяНачалаРабот,
		|	ВКМ_ОбслуживаниеКлиента.ВремяОкончанияРабот,
		|	ВКМ_ОбслуживаниеКлиента.Специалист
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка"; 

		Запрос.УстановитьПараметр("Ссылка", Ссылка); 

		Выборка = Запрос.Выполнить().Выбрать(); 
		Выборка.Следующий();
		
		ЕстьИзменения = Ложь;
		Массив = Новый Массив;
		
		Если Выборка.ДатаПроведенияРабот <> ДатаПроведенияРабот Тогда
			ЕстьИзменения = Истина;
			Массив.Добавить(СтрШаблон("%1Изменилась дата проведения работ с %2 на %3", Символы.ПС, Формат(Выборка.ДатаПроведенияРабот, "ДФ=dd.MM.yyyy;"), Формат(ДатаПроведенияРабот, "ДФ=dd.MM.yyyy;")));		
		КонецЕсли;
		 
		Если Выборка.ВремяНачалаРабот <> ВремяНачалаРабот Тогда
			ЕстьИзменения = Истина;
			Массив.Добавить(СтрШаблон("%1Изменилось время начала работ с %2 на %3", Символы.ПС, Формат(Выборка.ВремяНачалаРабот, "ДЛФ=T;"), Формат(ВремяНачалаРабот, "ДЛФ=T;")));		
		КонецЕсли;
		
		Если Выборка.ВремяОкончанияРабот <> ВремяОкончанияРабот Тогда
			ЕстьИзменения = Истина;
			Массив.Добавить(СтрШаблон("%1Изменилось время окончания работ с %2 на %3", Символы.ПС, Формат(Выборка.ВремяОкончанияРабот, "ДЛФ=T;"), Формат(ВремяОкончанияРабот, "ДЛФ=T;")));
		КонецЕсли;
		
		Если Выборка.Специалист <> Специалист Тогда
			ЕстьИзменения = Истина;
			Массив.Добавить(СтрШаблон("%1Изменился специалист с %2 на %3", Символы.ПС, Выборка.Специалист, Специалист));		
		КонецЕсли;
		
		Если ЕстьИзменения Тогда
			ТекстУведомления = "В документе обслуживания клиента №" + Номер + " произошли следующие изменения:";
			Для Каждого Значение Из Массив Цикл
				ТекстУведомления = ТекстУведомления + Значение;	
			КонецЦикла;		
			ВКМ_Телеграм.СоздатьУведомление(ТекстУведомления);		
		КонецЕсли;
		
	КонецЕсли; 



КонецПроцедуры 

#КонецОбласти

#КонецЕсли